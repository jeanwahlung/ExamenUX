{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\jeanw\\\\Documents\\\\Tareas UX\\\\examen\\\\src\\\\loginrender.js\",\"C:\\\\Users\\\\jeanw\\\\Documents\\\\Tareas UX\\\\examen\\\\src\\\\App.js\",\"C:\\\\Users\\\\jeanw\\\\Documents\\\\Tareas UX\\\\examen\\\\src\\\\serviceWorker.js\",\"C:\\\\Users\\\\jeanw\\\\Documents\\\\Tareas UX\\\\examen\\\\src\\\\index.js\"],\"names\":[\"loginrender\",\"props\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"isLoginOpen\",\"isRegisterOpen\",\"setState\",\"react_default\",\"a\",\"createElement\",\"className\",\"onClick\",\"showLoginBox\",\"bind\",\"showRegisterBox\",\"loginrender_LoginBox\",\"loginrender_RegisterBox\",\"React\",\"Component\",\"LoginBox\",\"_this2\",\"e\",\"htmlFor\",\"type\",\"name\",\"placeholder\",\"submitLogin\",\"RegisterBox\",\"_this3\",\"submitRegister\",\"App\",\"src_loginrender_0\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\r\\n\\r\\nimport './loginrender.css';\\r\\nimport './App.css';\\r\\n\\r\\nclass loginrender extends React.Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {\\r\\n            isLoginOpen: true,\\r\\n            isRegisterOpen: false\\r\\n          };\\r\\n    }\\r\\n    showRegisterBox(){\\r\\n        \\r\\n        this.setState({isRegisterOpen: true, isLoginOpen:false});\\r\\n       \\r\\n    }\\r\\n    showLoginBox(){\\r\\n        \\r\\n        this.setState({isLoginOpen: true, isRegisterOpen:false});\\r\\n        \\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n\\r\\n\\r\\n            <div className=\\\"root-container\\\">\\r\\n                <div className=\\\"box-controller\\\">\\r\\n                    <div className=\\\"controller\\\" onClick={this.showLoginBox.bind(this)}>\\r\\n                        Login\\r\\n                    </div>\\r\\n                    <div className=\\\"controller\\\" onClick={this.showRegisterBox.bind(this)}>\\r\\n                        Register\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div className=\\\"box-container\\\">\\r\\n                    {this.state.isLoginOpen && <LoginBox /> }\\r\\n                    {this.state.isRegisterOpen && <RegisterBox />}\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n        );\\r\\n    }\\r\\n}\\r\\n\\r\\nclass LoginBox extends React.Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {};\\r\\n\\r\\n    }\\r\\n\\r\\n    submitLogin(e) {\\r\\n\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div className=\\\"inner-container\\\" >\\r\\n                <div className=\\\"box-header\\\">\\r\\n                    Login\\r\\n            </div>\\r\\n                <div className=\\\"box\\\">\\r\\n\\r\\n                    <div className=\\\"input-group\\\">\\r\\n\\r\\n                        <label htmlFor=\\\"username\\\">Username</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"username\\\" className=\\\"login-input\\\" placeholder=\\\"Username\\\" />\\r\\n                    </div>\\r\\n\\r\\n                    <div className=\\\"input-group\\\">\\r\\n\\r\\n                        <label htmlFor=\\\"password\\\">Password</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"password\\\" className=\\\"login-input\\\" placeholder=\\\"Password\\\" />\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" className=\\\"login-btn\\\" onClick={ this.submitLogin.bind(this) }>Login</button>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\nclass RegisterBox extends React.Component {\\r\\n    constructor(props) {\\r\\n        super(props);\\r\\n        this.state = {};\\r\\n\\r\\n    }\\r\\n\\r\\n    submitRegister(e) {\\r\\n\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n        return (\\r\\n            <div className=\\\"inner-container\\\" >\\r\\n                <div className=\\\"box-header\\\">\\r\\n                    Register\\r\\n            </div>\\r\\n                <div className=\\\"box\\\">\\r\\n\\r\\n                    <div className=\\\"input-group\\\">\\r\\n\\r\\n                        <label htmlFor=\\\"username\\\">Username</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"username\\\" className=\\\"login-input\\\" placeholder=\\\"Username\\\" />\\r\\n                    </div>\\r\\n\\r\\n                    <div className=\\\"input-group\\\">\\r\\n\\r\\n                        <label htmlFor=\\\"password\\\">Password</label>\\r\\n                        <input type=\\\"text\\\" name=\\\"password\\\" className=\\\"login-input\\\" placeholder=\\\"Password\\\" />\\r\\n                    </div>\\r\\n                    <button type=\\\"button\\\" className=\\\"login-btn\\\" onClick={ this.submitRegister.bind(this) }>Login</button>\\r\\n\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        );\\r\\n    }\\r\\n}\\r\\nexport default loginrender;\",\"import React, { Component } from 'react';\\nimport './App.css';\\nimport { Button } from 'reactstrap';\\nimport Log from './loginrender';\\nimport './loginrender.css'\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n\\n\\n      <div className=\\\"root-container\\\">\\n\\n        <Log />\\n      </div>\\n\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport 'bootstrap/dist/css/bootstrap.min.css';\\nimport * as serviceWorker from './serviceWorker';\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(18)},16:function(e,t,n){},18:function(e,t,n){\"use strict\";n.r(t);var a=n(0),i=n.n(a),r=n(9),s=n.n(r),o=(n(16),n(1)),c=n(2),l=n(4),m=n(3),u=n(5),p=(n(7),n(8),function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(m.a)(t).call(this,e))).state={isLoginOpen:!0,isRegisterOpen:!1},n}return Object(u.a)(t,e),Object(c.a)(t,[{key:\"showRegisterBox\",value:function(){this.setState({isRegisterOpen:!0,isLoginOpen:!1})}},{key:\"showLoginBox\",value:function(){this.setState({isLoginOpen:!0,isRegisterOpen:!1})}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"root-container\"},i.a.createElement(\"div\",{className:\"box-controller\"},i.a.createElement(\"div\",{className:\"controller\",onClick:this.showLoginBox.bind(this)},\"Login\"),i.a.createElement(\"div\",{className:\"controller\",onClick:this.showRegisterBox.bind(this)},\"Register\")),i.a.createElement(\"div\",{className:\"box-container\"},this.state.isLoginOpen&&i.a.createElement(d,null),this.state.isRegisterOpen&&i.a.createElement(b,null)))}}]),t}(i.a.Component)),d=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(m.a)(t).call(this,e))).state={},n}return Object(u.a)(t,e),Object(c.a)(t,[{key:\"submitLogin\",value:function(e){}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"inner-container\"},i.a.createElement(\"div\",{className:\"box-header\"},\"Login\"),i.a.createElement(\"div\",{className:\"box\"},i.a.createElement(\"div\",{className:\"input-group\"},i.a.createElement(\"label\",{htmlFor:\"username\"},\"Username\"),i.a.createElement(\"input\",{type:\"text\",name:\"username\",className:\"login-input\",placeholder:\"Username\"})),i.a.createElement(\"div\",{className:\"input-group\"},i.a.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),i.a.createElement(\"input\",{type:\"text\",name:\"password\",className:\"login-input\",placeholder:\"Password\"})),i.a.createElement(\"button\",{type:\"button\",className:\"login-btn\",onClick:this.submitLogin.bind(this)},\"Login\")))}}]),t}(i.a.Component),b=function(e){function t(e){var n;return Object(o.a)(this,t),(n=Object(l.a)(this,Object(m.a)(t).call(this,e))).state={},n}return Object(u.a)(t,e),Object(c.a)(t,[{key:\"submitRegister\",value:function(e){}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"inner-container\"},i.a.createElement(\"div\",{className:\"box-header\"},\"Register\"),i.a.createElement(\"div\",{className:\"box\"},i.a.createElement(\"div\",{className:\"input-group\"},i.a.createElement(\"label\",{htmlFor:\"username\"},\"Username\"),i.a.createElement(\"input\",{type:\"text\",name:\"username\",className:\"login-input\",placeholder:\"Username\"})),i.a.createElement(\"div\",{className:\"input-group\"},i.a.createElement(\"label\",{htmlFor:\"password\"},\"Password\"),i.a.createElement(\"input\",{type:\"text\",name:\"password\",className:\"login-input\",placeholder:\"Password\"})),i.a.createElement(\"button\",{type:\"button\",className:\"login-btn\",onClick:this.submitRegister.bind(this)},\"Login\")))}}]),t}(i.a.Component),h=p,g=function(e){function t(){return Object(o.a)(this,t),Object(l.a)(this,Object(m.a)(t).apply(this,arguments))}return Object(u.a)(t,e),Object(c.a)(t,[{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"root-container\"},i.a.createElement(h,null))}}]),t}(a.Component);n(17),Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));s.a.render(i.a.createElement(g,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},7:function(e,t,n){},8:function(e,t,n){}},[[10,1,2]]]);","extractedComments":[]}